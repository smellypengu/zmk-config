/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#include "../../../../zmk-nodefree-config/helper.h"
#include "../../../../zmk-nodefree-config/keypos_def/keypos_36keys.h"
#include "../../../../zmk-nodefree-config/international_chars/swedish.dtsi"

#define ___ &trans

// Layers definitions
#define DEFAULT  0
#define EXT      1
#define SYM1     2
#define SYM2     3
#define FNC      4
#define ACC      5
#define GAME     6
#define SETTINGS 7

&mt {
    tapping_term_ms = <200>;
};

&sk {
    ignore-modifiers;
};

/ {
    combos {
        compatible = "zmk,combos";

        // Both right thumb keys
        combo_accent {
            timeout-ms = <40>;
            key-positions = <RH0 RH1>;
            bindings = <&mo ACC>;
        };

        // Internal-left & external-right thumb keys
        combo_sym2 {
            timeout-ms = <40>;
            key-positions = <LH0 RH1>;
            bindings = <&mo SYM2>;
        };

        // Both left thumb keys
        combo_settings {
            timeout-ms = <40>;
            key-positions = <LH1 LH0>;
            bindings = <&mo SETTINGS>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        // Base alpha layer (COLEMAK-DH)
        default_layer {
            bindings = <
                &kp Q    &kp W    &kp F      &kp P    &kp B                                &kp J    &kp L     &kp U      &kp Y    &kp APOS
                &kp A    &kp R    &kp S      &kp T    &kp G                                &kp M    &kp N     &kp E      &kp I    &kp O
                &kp Z    &kp X    &kp C      &kp D    &kp V                                &kp K    &kp H     &kp COMMA  &kp DOT  &kp FSLH
                                  &tog GAME  &mo EXT  &mt LSHFT SPC                        &kp SPC  &sl SYM1  ___
            >;
        };

        // Main modifiers and arrow keys
        ext_layer {
            bindings = <
                &kp ESC    ___        ___        ___        ___                          &kp PG_UP     &kp HOME  &kp UP    &kp END    &kp CAPS
                &sk LALT   &sk LGUI   &sk LSHFT  &sk LCTRL  &kp RALT                     &kp PG_DN     &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL
                &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp TAB    &kp LC(V)                    &kp LC(BSPC)  &kp BSPC  ___    ___     ___
                                      ___        ___        ___                          &kp ENTER     &mo FNC   ___
            >;
        };

        // Numbers and high frequency symbols
        sym1_layer {
            bindings = <
                &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                      &kp N6        &kp N7     &kp N8   &kp N9        &kp N0
                &kp LT  &kp PRCNT  &kp LPAR  &kp LBRC  &kp RA(LBKT)                &kp KP_EQUAL  &kp QMARK  &kp SQT  &kp PLUS      &kp STAR
                &kp GT  &kp DLLR   &kp RPAR  &kp RBRC  &kp RA(RBKT)                &kp AT        &kp EXCL   &kp DQT  &kp KP_MINUS  &kp FSLH
                                   ___    &mo FNC   &mo SYM2                       ___           ___        ___
            >;
        };

        // Low frequency symbols
        sym2_layer {
            bindings = <
                &kp CARET  &kp UNDER  ___  ___  ___                       ___  ___  ___  ___  ___
                ___        ___        ___  ___  ___                       ___  ___  ___  ___  ___
                ___        ___        ___  ___  ___                       ___  ___  ___  ___  ___
                                      ___  ___  ___                       ___  ___  ___
            >;
        };

        // Function keys with modifiers
        fnc_layer {
            bindings = <
                &kp F1    &kp F2    &kp F3     &kp F4     &kp F5                       &kp F6   &kp F7   &kp F8           &kp F9  &kp F10
                &sk LALT  &sk LGUI  &sk LSHFT  &sk LCTRL  &kp RALT                     &kp F11  &kp F12  &kp PRINTSCREEN  ___  ___
                ___       ___       ___        ___        ___                          ___      ___      ___              ___  ___
                                    ___        ___        ___                          ___      ___      ___
            >;
        };

        // Used to type regional accents
        acc_layer {
            bindings = <
                ___  ___     ___     ___     ___                       ___  ___  ___  ___  ___
                ___  &sv_ao  &sv_ae  &sv_oe  ___                       ___  ___  ___  ___  ___
                ___  ___     ___     ___     ___                       ___  ___  ___  ___  ___
                             ___     ___     ___                       ___  ___  ___
            >;
        };

        // Gaming (QWERTY)
        game_layer {
            bindings = <
                &kp ESC   &kp Q  &kp W      &kp E       &kp R                       ___  ___  ___  ___  ___
                &kp LSFT  &kp A  &kp S      &kp D       &kp F                       ___  ___  ___  ___  ___
                &kp LALT  &kp Z  &kp X      &kp C       &kp V                       ___  ___  ___  ___  ___
                                 &tog GAME  &kp LCTL    &kp SPC                     ___  ___  ___
            >;
        };

        // Used to change the keyboard's settings
        settings_layer {
            bindings = <
                &bootloader  ___  ___  &bt BT_CLR  &bt BT_SEL 0                       &bt BT_SEL 3  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &rgb_ug RGB_EFR  &bootloader
                ___          ___  ___  ___         &bt BT_SEL 1                       &bt BT_SEL 4  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI
                ___          ___  ___  ___         &bt BT_SEL 2                       &bt BT_SEL 5  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD
                                  ___  ___         ___                                ___           ___              ___
            >;
        };
    };
};
